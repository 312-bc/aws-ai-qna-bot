Index: templates/testall/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/testall/index.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/testall/index.js	(date 1595986700051)
@@ -21,6 +21,13 @@
         "VarIndex": {"Type":"String"},
         "EsEndpoint": {"Type":"String"},
         "EsProxyLambda": {"Type":"String"},
-        "TestAllBucket": {"Type":"String"}
+        "TestAllBucket": {"Type":"String"},
+        "VPCSubnetIdList" : {"Type": "String"},
+        "VPCSecurityGroupIdList": {"Type": "String"}
+    },
+    "Conditions": {
+        "VPCEnabled": { "Fn::Not": [
+                { "Fn::Equals": [ "", { "Ref": "VPCSecurityGroupIdList" } ] }
+            ] }
     }
 }
\ No newline at end of file
Index: templates/public/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/public/index.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/public/index.js	(date 1595797967795)
@@ -36,7 +36,9 @@
         "Email",
         "Username",
         "Encryption",
-        "PublicOrPrivate"
+        "PublicOrPrivate",
+        "VPCSubnetIdList",
+        "VPCSecurityGroupIdList"
     ])
     base.Conditions.Public={"Fn::Equals":[{"Ref":"PublicOrPrivate"},"PUBLIC"]}
     base.Conditions.Encrypted={"Fn::Equals":[{"Ref":"Encryption"},"ENCRYPTED"]}
@@ -45,6 +47,11 @@
     base.Conditions.BuildExamples={"Fn::Equals":[true,true]}
     base.Conditions.CreateDomain={"Fn::Equals":[true,true]}
     base.Conditions.DontCreateDomain={"Fn::Equals":[true,false]}
+    base.Conditions.VPCEnabled={ "Fn::Not": [
+            { "Fn::Equals": [ "",
+                    { "Fn::Join": [ "", { "Ref": "VPCSecurityGroupIdList" } ] }
+                ] }
+        ] }
     
     var out=JSON.stringify(base).replace(
         /{"Ref":"BootstrapBucket"}/g,
Index: templates/master/lambda.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/lambda.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/lambda.js	(date 1595981433463)
@@ -37,7 +37,8 @@
         },
         "Path": "/",
         "ManagedPolicyArns": [
-          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
+          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
+          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
         ],
         "Policies": [
           {
Index: templates/master/lex-build/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/lex-build/index.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/lex-build/index.js	(date 1595982933672)
@@ -100,6 +100,7 @@
         "Path": "/",
         "ManagedPolicyArns": [
           "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
+          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
           {"Ref":"EsPolicy"},
           "arn:aws:iam::aws:policy/AmazonLexFullAccess"
         ]
@@ -162,6 +163,12 @@
         "Role": {"Fn::GetAtt": ["LexBuildLambdaRole","Arn"]},
         "Runtime":runtime,
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Api"
Index: templates/master/lex/bot.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/lex/bot.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/lex/bot.js	(date 1595266640106)
@@ -1,7 +1,7 @@
 var config=require('./config')
 
 //must change this version to force upgrades to reapply across the entire Bot echo system
-const qnabotversion = process.env.npm_package_version + " - v1";
+const qnabotversion = process.env.npm_package_version + " - v3";
 
 module.exports={
     "QNAInvokePermission": {
Index: templates/export/resources.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/export/resources.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/export/resources.js	(date 1595989861092)
@@ -36,6 +36,12 @@
         "Role": {"Fn::GetAtt": ["ExportRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": { "Fn::Split" : [ ",", {"Ref": "VPCSubnetIdList"} ] },
+                "SecurityGroupIds": { "Fn::Split" : [ ",", {"Ref": "VPCSecurityGroupIdList"} ] },
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Export"
@@ -60,6 +66,7 @@
         "Path": "/",
         "ManagedPolicyArns": [
           "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
+          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
           {"Ref":"ExportPolicy"}
         ]
       }
Index: templates/export/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/export/index.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/export/index.js	(date 1595989897834)
@@ -19,6 +19,13 @@
         "VarIndex": {"Type":"String"},
         "EsEndpoint": {"Type":"String"},
         "EsProxyLambda": {"Type":"String"},
-        "ExportBucket": {"Type":"String"}
+        "ExportBucket": {"Type":"String"},
+        "VPCSubnetIdList" : {"Type": "String"},
+        "VPCSecurityGroupIdList": {"Type": "String"}
+    },
+    "Conditions": {
+        "VPCEnabled": { "Fn::Not": [
+                { "Fn::Equals": [ "", { "Ref": "VPCSecurityGroupIdList" } ] }
+            ] }
     }
 }
\ No newline at end of file
Index: templates/master/routes/examples/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/routes/examples/index.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/routes/examples/index.js	(date 1595982933677)
@@ -76,6 +76,12 @@
         "Role": {"Fn::GetAtt": ["S3ListLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Api"
@@ -93,6 +99,12 @@
         "Role": {"Fn::GetAtt": ["S3ListLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Api"
Index: templates/examples/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/examples/index.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/examples/index.js	(date 1595990291366)
@@ -29,9 +29,15 @@
     "CFNLambdaRole":  {"Type":"String"},
     "ApiUrlName":{"Type":"String"},
     "AssetBucket":{"Type":"String"},
-    "QIDLambdaArn":{"Type":"String"}
+    "QIDLambdaArn":{"Type":"String"},
+    "VPCSubnetIdList" : {"Type": "String"},
+    "VPCSecurityGroupIdList": {"Type": "String"}
   },
-  "Conditions":{}
+  "Conditions": {
+    "VPCEnabled": { "Fn::Not": [
+        { "Fn::Equals": [ "", { "Ref": "VPCSecurityGroupIdList" } ] }
+      ] }
+  }
 }
 
 
Index: templates/master/routes/jobs/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/routes/jobs/index.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/routes/jobs/index.js	(date 1595982933664)
@@ -136,6 +136,12 @@
         "Role": {"Fn::GetAtt": ["S3ListLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Api"
@@ -159,7 +165,8 @@
         },
         "Path": "/",
         "ManagedPolicyArns": [
-          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
+          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
+          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
         ],
         "Policies": [
           {
Index: templates/master/proxy-lex/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/proxy-lex/index.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/proxy-lex/index.js	(date 1595982933660)
@@ -12,6 +12,12 @@
         "Role": {"Fn::GetAtt": ["LexProxyLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Api"
@@ -36,6 +42,12 @@
         "Role": {"Fn::GetAtt": ["LexProxyLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Api"
@@ -60,6 +72,7 @@
         "Path": "/",
         "ManagedPolicyArns": [
           "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
+          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
           "arn:aws:iam::aws:policy/AmazonLexFullAccess"
         ],
         "Policies":[{
Index: templates/master/schemaLambda.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/schemaLambda.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/schemaLambda.js	(date 1595982933668)
@@ -23,6 +23,12 @@
         "Role": {"Fn::GetAtt": ["SchemaLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Api"
@@ -47,6 +53,7 @@
         "Path": "/",
         "ManagedPolicyArns": [
           "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
+          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
           {"Ref":"EsPolicy"}
         ]
       }
Index: workshops/reinvent2019/code/solarflare/package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- workshops/reinvent2019/code/solarflare/package-lock.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ workshops/reinvent2019/code/solarflare/package-lock.json	(date 1595360806738)
@@ -1125,7 +1125,7 @@
       "dev": true,
       "requires": {
         "flat": "^4.1.0",
-        "lodash": "^4.17.15",
+        "lodash": "^4.17.19",
         "yargs": "^13.3.0"
       }
     }
Index: templates/examples/examples/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/examples/examples/index.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/examples/examples/index.js	(date 1595991610281)
@@ -146,6 +146,12 @@
         "Role":{"Ref":"CFNLambdaRole"} ,
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": { "Fn::Split" : [ ",", {"Ref": "VPCSubnetIdList"} ] },
+                "SecurityGroupIds": { "Fn::Split" : [ ",", {"Ref": "VPCSecurityGroupIdList"} ] },
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"CustomResource"
@@ -283,6 +289,7 @@
         ],
         "ManagedPolicyArns": [
             "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
+            "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
             "arn:aws:iam::aws:policy/AmazonKendraReadOnlyAccess"
         ]
       }
@@ -316,6 +323,12 @@
         "Role": {"Fn::GetAtt": ["ExampleLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": { "Fn::Split" : [ ",", {"Ref": "VPCSubnetIdList"} ] },
+                "SecurityGroupIds": { "Fn::Split" : [ ",", {"Ref": "VPCSecurityGroupIdList"} ] },
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Example"
@@ -352,6 +365,12 @@
         "Role": {"Fn::GetAtt": ["ExampleLambdaRole","Arn"]},
         "Runtime": "python3.6",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": { "Fn::Split" : [ ",", {"Ref": "VPCSubnetIdList"} ] },
+                "SecurityGroupIds": { "Fn::Split" : [ ",", {"Ref": "VPCSecurityGroupIdList"} ] },
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Example"
Index: templates/master/examples.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/examples.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/examples.js	(date 1595990354301)
@@ -18,7 +18,9 @@
                 "ApiUrlName":{"Fn::GetAtt":["ApiUrl","Name"]},
                 "AssetBucket":{"Ref":"AssetBucket"},
                 "FulfillmentLambdaRole":{"Ref": "FulfillmentLambdaRole"},
-                "QIDLambdaArn":{"Fn::GetAtt":["ESQidLambda","Arn"]}
+                "QIDLambdaArn":{"Fn::GetAtt":["ESQidLambda","Arn"]},
+                "VPCSubnetIdList" : { "Fn::Join" : [ ",", {"Ref":"VPCSubnetIdList"} ] },
+                "VPCSecurityGroupIdList": { "Fn::Join" : [ ",", {"Ref":"VPCSecurityGroupIdList"} ] },
             }
         }
     }
Index: lambda/cfn/package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda/cfn/package-lock.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ lambda/cfn/package-lock.json	(date 1595361688641)
@@ -1960,9 +1960,9 @@
       }
     },
     "lodash": {
-      "version": "4.17.15",
-      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz",
-      "integrity": "sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A=="
+      "version": "4.17.19",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.19.tgz",
+      "integrity": "sha512-JNvd8XER9GQX0v2qJgsaN/mzFCNA5BRe/j8JN9d+tWyGLSodKQHKFicdwNYzWwI3wjRnaKPsGj1XkBjx/F96DQ=="
     },
     "lodash._arraycopy": {
       "version": "3.0.0",
Index: lambda/cfn/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda/cfn/package.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ lambda/cfn/package.json	(date 1595360806711)
@@ -23,7 +23,7 @@
     "json-stringify-pretty-compact": "^1.0.4",
     "jsonwebtoken": "^8.0.1",
     "jszip": "^3.1.4",
-    "lodash": "^4.17.15",
+    "lodash": "^4.17.19",
     "multer": "^1.3.0",
     "stack-utils": "^1.0.1"
   },
Index: templates/master/tstallstack.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/tstallstack.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/tstallstack.js	(date 1595972336175)
@@ -14,6 +14,8 @@
                 "EsEndpoint": {"Fn::GetAtt": ["ESVar", "ESAddress"]},
                 "EsProxyLambda": {"Fn::GetAtt":["ESProxyLambda","Arn"]},
                 "TestAllBucket": {"Ref":"TestAllBucket"},
+                "VPCSubnetIdList" : { "Fn::Join" : [ ",", {"Ref":"VPCSubnetIdList"} ] },
+                "VPCSecurityGroupIdList": { "Fn::Join" : [ ",", {"Ref":"VPCSecurityGroupIdList"} ] },
             }
         }
     }
Index: templates/master/lex/fulfillment.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/lex/fulfillment.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/lex/fulfillment.js	(date 1595970339132)
@@ -58,6 +58,12 @@
       "Role": { "Fn::GetAtt": ["FulfillmentLambdaRole", "Arn"] },
       "Runtime": "nodejs10.x",
       "Timeout": 300,
+      "VpcConfig" : {
+        "Fn::If": [ "VPCEnabled", {
+          "SubnetIds": {"Ref": "VPCSubnetIdList"},
+          "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+        }, {"Ref" : "AWS::NoValue"} ]
+      },
       "Tags": [{
         Key: "Type",
         Value: "Fulfillment"
@@ -126,6 +132,7 @@
       "Path": "/",
       "ManagedPolicyArns": [
         "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
+        "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
         "arn:aws:iam::aws:policy/TranslateReadOnly",
         "arn:aws:iam::aws:policy/ComprehendReadOnly",
         { "Ref": "EsPolicy" }
Index: templates/import/resources.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/import/resources.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/import/resources.js	(date 1595989861086)
@@ -34,6 +34,12 @@
         "Role": {"Fn::GetAtt": ["ImportRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": { "Fn::Split" : [ ",", {"Ref": "VPCSubnetIdList"} ] },
+                "SecurityGroupIds": { "Fn::Split" : [ ",", {"Ref": "VPCSecurityGroupIdList"} ] },
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Import"
@@ -62,6 +68,12 @@
         "Role": {"Fn::GetAtt": ["ImportRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": { "Fn::Split" : [ ",", {"Ref": "VPCSubnetIdList"} ] },
+                "SecurityGroupIds": { "Fn::Split" : [ ",", {"Ref": "VPCSecurityGroupIdList"} ] },
+            }, {"Ref" : "AWS::NoValue"} ]
+          },
         "Tags":[{
             Key:"Type",
             Value:"Import"
@@ -86,6 +98,7 @@
         "Path": "/",
         "ManagedPolicyArns": [
           "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
+          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
           {"Ref":"ImportPolicy"}
         ]
       }
Index: templates/master/elasticsearch/info.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/elasticsearch/info.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/elasticsearch/info.js	(date 1595979540063)
@@ -22,6 +22,12 @@
         "Role": {"Fn::GetAtt": ["ESProxyLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"CustomResource"
Index: templates/master/importstack.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/importstack.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/importstack.js	(date 1595990877936)
@@ -17,6 +17,8 @@
                 "MetricsIndex": {"Fn::GetAtt": ["Var", "MetricsIndex"]},
                 "FeedbackIndex": {"Fn::GetAtt": ["Var", "FeedbackIndex"]},
                 "Encryption": {"Ref":"Encryption"},
+                "VPCSubnetIdList" : { "Fn::Join" : [ ",", {"Ref":"VPCSubnetIdList"} ] },
+                "VPCSecurityGroupIdList": { "Fn::Join" : [ ",", {"Ref":"VPCSecurityGroupIdList"} ] },
             }
         }
     }
Index: lambda/export/package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda/export/package-lock.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ lambda/export/package-lock.json	(date 1595361698800)
@@ -18,9 +18,9 @@
       }
     },
     "lodash": {
-      "version": "4.17.15",
-      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz",
-      "integrity": "sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A=="
+      "version": "4.17.19",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.19.tgz",
+      "integrity": "sha512-JNvd8XER9GQX0v2qJgsaN/mzFCNA5BRe/j8JN9d+tWyGLSodKQHKFicdwNYzWwI3wjRnaKPsGj1XkBjx/F96DQ=="
     },
     "lodash._arraycopy": {
       "version": "3.0.0",
Index: templates/master/exportstack.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/exportstack.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/exportstack.js	(date 1595990877931)
@@ -12,6 +12,8 @@
                 "EsEndpoint": {"Fn::GetAtt": ["ESVar", "ESAddress"]},
                 "EsProxyLambda": {"Fn::GetAtt":["ESProxyLambda","Arn"]},
                 "ExportBucket": {"Ref":"ExportBucket"},
+                "VPCSubnetIdList" : { "Fn::Join" : [ ",", {"Ref":"VPCSubnetIdList"} ] },
+                "VPCSecurityGroupIdList": { "Fn::Join" : [ ",", {"Ref":"VPCSecurityGroupIdList"} ] },
             }
         }
     }
Index: lambda/export/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda/export/package.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ lambda/export/package.json	(date 1595360806718)
@@ -10,7 +10,7 @@
   "license": "ISC",
   "dependencies": {
     "bluebird": "^3.5.1",
-    "lodash": "^4.17.15",
+    "lodash": "^4.17.19",
     "intercept-stdout": "^0.1.2"
   }
 }
Index: lambda/fulfillment/lib/middleware/lexRouter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda/fulfillment/lib/middleware/lexRouter.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ lambda/fulfillment/lib/middleware/lexRouter.js	(date 1595361668823)
@@ -72,7 +72,13 @@
     function getFreeTextResponse(inputText, sentiment) {
         let response = {
             message: "",
-            slots: { 'FreeText' : inputText, 'Sentiment' : sentiment},
+            slots: { 'FreeText' : inputText,
+                'Sentiment' : sentiment.Sentiment,
+                'SentimentPositive': sentiment.SentimentScore.Positive,
+                'SentimentNegative': sentiment.SentimentScore.Negative,
+                'SentimentNeutral': sentiment.SentimentScore.Neutral,
+                'SentimentMixed': sentiment.SentimentScore.Mixed
+            },
             dialogState: 'Fulfilled',
         }
         return response;
Index: templates/master/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/index.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/index.js	(date 1595797923026)
@@ -174,6 +174,16 @@
         "AllowedValues" : ["PUBLIC", "PRIVATE"],
         "Default":"PUBLIC"
     },
+    "VPCSubnetIdList" : {
+        "Description" : "Subnet IDs",
+        "Type": "CommaDelimitedList",
+        "Default": ""
+    },
+    "VPCSecurityGroupIdList": {
+        "Description" : "Security Group IDs",
+        "Type": "CommaDelimitedList",
+        "Default": ""
+    }
   },
   "Conditions":{
     "Public":{"Fn::Equals":[{"Ref":"PublicOrPrivate"},"PUBLIC"]},
@@ -182,7 +192,12 @@
     "Domain":{"Fn::Not":[{"Fn::Equals":[{"Ref":"ApprovedDomain"},"NONE"]}]},
     "BuildExamples":{"Fn::Equals":[{"Ref":"BuildExamples"},"TRUE"]},
     "CreateDomain":{"Fn::Equals":[{"Ref":"ElasticsearchName"},"EMPTY"]},
-    "DontCreateDomain":{"Fn::Not":[{"Fn::Equals":[{"Ref":"ElasticsearchName"},"EMPTY"]}]}
+    "DontCreateDomain":{"Fn::Not":[{"Fn::Equals":[{"Ref":"ElasticsearchName"},"EMPTY"]}]},
+    "VPCEnabled": { "Fn::Not": [
+              { "Fn::Equals": [ "",
+                      { "Fn::Join": [ "", { "Ref": "VPCSecurityGroupIdList" } ] }
+                  ] }
+          ] }
   }
 }
 
Index: templates/examples/extensions/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/examples/extensions/index.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/examples/extensions/index.js	(date 1595994206352)
@@ -57,6 +57,12 @@
         "Role":{"Ref":"CFNLambdaRole"} ,
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": { "Fn::Split" : [ ",", {"Ref": "VPCSubnetIdList"} ] },
+                "SecurityGroupIds": { "Fn::Split" : [ ",", {"Ref": "VPCSecurityGroupIdList"} ] },
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"CustomResource"
@@ -162,6 +168,7 @@
         }],
         "ManagedPolicyArns": [
             "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
+            "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
             "arn:aws:iam::aws:policy/AmazonKendraReadOnlyAccess"]
       }
     }
@@ -193,6 +200,12 @@
       "Role": {"Fn::GetAtt": ["ExtensionLambdaRole","Arn"]},
       "Runtime": "nodejs10.x",
       "Timeout": 300,
+      "VpcConfig" : {
+          "Fn::If": [ "VPCEnabled", {
+              "SubnetIds": { "Fn::Split" : [ ",", {"Ref": "VPCSubnetIdList"} ] },
+              "SecurityGroupIds": { "Fn::Split" : [ ",", {"Ref": "VPCSecurityGroupIdList"} ] },
+          }, {"Ref" : "AWS::NoValue"} ]
+      },
       "Tags":[{
           Key:"Type",
           Value:"LambdaHook"
@@ -228,6 +241,12 @@
       "Role": {"Fn::GetAtt": ["ExtensionLambdaRole","Arn"]},
       "Runtime": "python3.6",
       "Timeout": 300,
+      "VpcConfig" : {
+          "Fn::If": [ "VPCEnabled", {
+              "SubnetIds": { "Fn::Split" : [ ",", {"Ref": "VPCSubnetIdList"} ] },
+              "SecurityGroupIds": { "Fn::Split" : [ ",", {"Ref": "VPCSecurityGroupIdList"} ] },
+          }, {"Ref" : "AWS::NoValue"} ]
+      },
       "Tags":[{
           Key:"Type",
           Value:"LambdaHook"
Index: templates/master/elasticsearch/firehose.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/elasticsearch/firehose.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/elasticsearch/firehose.js	(date 1595877498981)
@@ -27,7 +27,14 @@
                     "CompressionFormat" : "UNCOMPRESSED",
                     "RoleARN" : {"Fn::GetAtt" : ["FirehoseESS3Role", "Arn"] }
                 },
-                "TypeName" : ""
+                "TypeName" : "",
+                "VpcConfiguration" : {
+                    "Fn::If": [ "VPCEnabled", {
+                        "RoleARN": {"Fn::GetAtt" : ["FirehoseESS3Role", "Arn"] },
+                        "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                        "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+                    }, {"Ref" : "AWS::NoValue"} ]
+                }
             },
         }
     },
@@ -59,7 +66,14 @@
                     "CompressionFormat" : "UNCOMPRESSED",
                     "RoleARN" : {"Fn::GetAtt" : ["FirehoseESS3Role", "Arn"] }
                 },
-                "TypeName" : ""
+                "TypeName" : "",
+                "VpcConfiguration" : {
+                    "Fn::If": [ "VPCEnabled", {
+                        "RoleARN": {"Fn::GetAtt" : ["FirehoseESS3Role", "Arn"] },
+                        "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                        "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+                    }, {"Ref" : "AWS::NoValue"} ]
+                }
             },
         }
     },
@@ -170,7 +184,22 @@
                 "Resource": [
                   {"Fn::Join": ["",["arn:aws:logs:",{ "Ref" : "AWS::Region" },":",{ "Ref" : "AWS::AccountId" },":log-group:/aws/kinesisfirehose/*"]]}
                 ]
-              }
+              },
+              {
+                "Sid": "",
+                "Effect": "Allow",
+                "Action": [
+                    "ec2:DescribeVpcs",
+                    "ec2:DescribeVpcAttribute",
+                    "ec2:DescribeSubnets",
+                    "ec2:DescribeSecurityGroups",
+                    "ec2:DescribeNetworkInterfaces",
+                    "ec2:CreateNetworkInterface",
+                    "ec2:CreateNetworkInterfacePermission",
+                    "ec2:DeleteNetworkInterface"
+                ],
+                "Resource": "*"
+            }
             ]
           },
           "PolicyName" : "QnAFirehose"
Index: templates/master/elasticsearch/es.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/elasticsearch/es.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/elasticsearch/es.js	(date 1595860066776)
@@ -20,6 +20,12 @@
     },
     "EncryptionAtRestOptions": {
        "Enabled": {"Fn::If": [ "Encrypted", true, false]}
+    },
+    "VPCOptions" : {
+        "Fn::If": [ "VPCEnabled", {
+            "SubnetIds": {"Ref": "VPCSubnetIdList"},
+            "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+        }, {"Ref" : "AWS::NoValue"} ]
     }
 }
 
Index: templates/master/cfn/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/cfn/index.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/cfn/index.js	(date 1595982933655)
@@ -14,6 +14,12 @@
         "Role": {"Fn::GetAtt": ["CFNLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 60,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"CustomResource"
@@ -45,6 +51,12 @@
         "Role": {"Fn::GetAtt": ["CFNLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 180,
+        "VpcConfig" : {
+          "Fn::If": [ "VPCEnabled", {
+              "SubnetIds": {"Ref": "VPCSubnetIdList"},
+              "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+          }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"CustomResource"
Index: lambda/fulfillment/lib/middleware/sentiment.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda/fulfillment/lib/middleware/sentiment.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ lambda/fulfillment/lib/middleware/sentiment.js	(date 1595361479431)
@@ -15,7 +15,7 @@
     return(Promise.resolve(comprehend.detectSentiment(comprehend_params).promise()))
     .then(function(data) {
         console.log(JSON.stringify(data));
-        return data.Sentiment ;
+        return data;
     });
 }
 
Index: templates/master/elasticsearch/proxy.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/elasticsearch/proxy.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/elasticsearch/proxy.js	(date 1595895450878)
@@ -20,6 +20,12 @@
         "Role": {"Fn::GetAtt": ["ESProxyLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+          "Fn::If": [ "VPCEnabled", {
+              "SubnetIds": {"Ref": "VPCSubnetIdList"},
+              "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+          }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"CustomResource"
Index: lambda/import/package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda/import/package-lock.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ lambda/import/package-lock.json	(date 1595361706236)
@@ -18,9 +18,9 @@
       }
     },
     "lodash": {
-      "version": "4.17.15",
-      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz",
-      "integrity": "sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A=="
+      "version": "4.17.19",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.19.tgz",
+      "integrity": "sha512-JNvd8XER9GQX0v2qJgsaN/mzFCNA5BRe/j8JN9d+tWyGLSodKQHKFicdwNYzWwI3wjRnaKPsGj1XkBjx/F96DQ=="
     },
     "lodash._arraycopy": {
       "version": "3.0.0",
Index: lambda/import/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda/import/package.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ lambda/import/package.json	(date 1595360806745)
@@ -10,7 +10,7 @@
   "license": "ISC",
   "dependencies": {
     "bluebird": "^3.5.1",
-    "lodash": "^4.17.15",
+    "lodash": "^4.17.19",
     "intercept-stdout": "^0.1.2"
   }
 }
Index: templates/master/roles.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/roles.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/roles.json	(date 1595901575139)
@@ -168,7 +168,8 @@
         },
         "Path": "/",
         "ManagedPolicyArns": [
-            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
+            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
+            "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
         ],
         "Policies":[{
             "PolicyName":"access", 
Index: lambda/lex-build/package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda/lex-build/package-lock.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ lambda/lex-build/package-lock.json	(date 1595361709212)
@@ -1128,9 +1128,9 @@
       }
     },
     "lodash": {
-      "version": "4.17.15",
-      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz",
-      "integrity": "sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A=="
+      "version": "4.17.19",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.19.tgz",
+      "integrity": "sha512-JNvd8XER9GQX0v2qJgsaN/mzFCNA5BRe/j8JN9d+tWyGLSodKQHKFicdwNYzWwI3wjRnaKPsGj1XkBjx/F96DQ=="
     },
     "lodash._arraycopy": {
       "version": "3.0.0",
Index: lambda/lex-build/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda/lex-build/package.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ lambda/lex-build/package.json	(date 1595360806727)
@@ -15,7 +15,7 @@
     "elasticsearch": "^16.7.1",
     "http-aws-es": "^6.0.0",
     "intercept-stdout": "^0.1.2",
-    "lodash": "^4.17.15"
+    "lodash": "^4.17.19"
   },
   "devDependencies": {
     "nodeunit": "^0.11.3",
Index: templates/master/proxy-es.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/proxy-es.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/proxy-es.js	(date 1595982933651)
@@ -31,6 +31,12 @@
         "Role": {"Fn::GetAtt": ["ESProxyLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Service"
@@ -56,6 +62,12 @@
         "Role": {"Fn::GetAtt": ["ESProxyLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Service"
@@ -83,6 +95,12 @@
         "Role": {"Fn::GetAtt": ["ESProxyLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Service"
@@ -128,6 +146,12 @@
         "Role": {"Fn::GetAtt": ["ESLoggingLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Logging"
@@ -153,6 +177,12 @@
         "Role": {"Fn::GetAtt": ["ESProxyLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Query"
@@ -181,6 +211,12 @@
         "Role": {"Fn::GetAtt": ["ESProxyLambdaRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Service"
@@ -205,6 +241,7 @@
         "Path": "/",
         "ManagedPolicyArns": [
           "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
+          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
           "arn:aws:iam::aws:policy/TranslateReadOnly",
           {"Ref":"EsPolicy"},
           "arn:aws:iam::aws:policy/AmazonLexFullAccess"
@@ -284,6 +321,7 @@
         }],
         "ManagedPolicyArns": [
           "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
+          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
         ]
       }
     },
Index: lambda/testall/package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda/testall/package-lock.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ lambda/testall/package-lock.json	(date 1595365811212)
@@ -18,9 +18,9 @@
       }
     },
     "lodash": {
-      "version": "4.17.15",
-      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz",
-      "integrity": "sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A=="
+      "version": "4.17.19",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.19.tgz",
+      "integrity": "sha512-JNvd8XER9GQX0v2qJgsaN/mzFCNA5BRe/j8JN9d+tWyGLSodKQHKFicdwNYzWwI3wjRnaKPsGj1XkBjx/F96DQ=="
     },
     "lodash._arraycopy": {
       "version": "3.0.0",
Index: lambda/testall/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda/testall/package.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ lambda/testall/package.json	(date 1595360806722)
@@ -10,7 +10,7 @@
   "license": "ISC",
   "dependencies": {
     "bluebird": "^3.5.1",
-    "lodash": "^4.17.4",
+    "lodash": "^4.17.19",
     "intercept-stdout": "^0.1.2"
   }
 }
Index: templates/examples/examples/package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/examples/examples/package-lock.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/examples/examples/package-lock.json	(date 1595361684626)
@@ -33,9 +33,9 @@
       }
     },
     "lodash": {
-      "version": "4.17.13",
-      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.13.tgz",
-      "integrity": "sha512-vm3/XWXfWtRua0FkUyEHBZy8kCPjErNBT9fJx8Zvs+U6zjqPbTUOpkaoum3O5uiA8sm+yNMHXfYkTUHFoMxFNA=="
+      "version": "4.17.19",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.19.tgz",
+      "integrity": "sha512-JNvd8XER9GQX0v2qJgsaN/mzFCNA5BRe/j8JN9d+tWyGLSodKQHKFicdwNYzWwI3wjRnaKPsGj1XkBjx/F96DQ=="
     },
     "minimist": {
       "version": "1.2.5",
Index: templates/examples/examples/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/examples/examples/package.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/examples/examples/package.json	(date 1595360806748)
@@ -12,6 +12,6 @@
     "bluebird": "^3.5.1",
     "cfn-response": "^1.0.1",
     "handlebars": "^4.7.6",
-    "lodash": "^4.17.13"
+    "lodash": "^4.17.19"
   }
 }
Index: templates/examples/extensions/js_lambda_hooks/CustomJSHook/package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/examples/extensions/js_lambda_hooks/CustomJSHook/package-lock.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/examples/extensions/js_lambda_hooks/CustomJSHook/package-lock.json	(date 1595361684953)
@@ -33,9 +33,9 @@
       }
     },
     "lodash": {
-      "version": "4.17.15",
-      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz",
-      "integrity": "sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A=="
+      "version": "4.17.19",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.19.tgz",
+      "integrity": "sha512-JNvd8XER9GQX0v2qJgsaN/mzFCNA5BRe/j8JN9d+tWyGLSodKQHKFicdwNYzWwI3wjRnaKPsGj1XkBjx/F96DQ=="
     },
     "minimist": {
       "version": "1.2.5",
Index: templates/master/signup/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/master/signup/index.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/master/signup/index.js	(date 1595982933644)
@@ -44,6 +44,12 @@
         },
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Cognito"
@@ -76,6 +82,12 @@
         },
         "Runtime": "nodejs10.x",
         "Timeout": 300,
+        "VpcConfig" : {
+            "Fn::If": [ "VPCEnabled", {
+                "SubnetIds": {"Ref": "VPCSubnetIdList"},
+                "SecurityGroupIds": {"Ref": "VPCSecurityGroupIdList"}
+            }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"Cognito"
@@ -99,7 +111,8 @@
         },
         "Path": "/",
         "ManagedPolicyArns": [
-          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
+          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
+          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
         ]
       }
     }
Index: templates/examples/extensions/js_lambda_hooks/CustomJSHook/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/examples/extensions/js_lambda_hooks/CustomJSHook/package.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/examples/extensions/js_lambda_hooks/CustomJSHook/package.json	(date 1595360806742)
@@ -12,6 +12,6 @@
     "bluebird": "^3.5.1",
     "cfn-response": "^1.0.1",
     "handlebars": "^4.7.6",
-    "lodash": "^4.17.4"
+    "lodash": "^4.17.19"
   }
 }
Index: templates/examples/extensions/ui_imports/package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/examples/extensions/ui_imports/package-lock.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/examples/extensions/ui_imports/package-lock.json	(date 1595361691490)
@@ -33,9 +33,9 @@
       }
     },
     "lodash": {
-      "version": "4.17.15",
-      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz",
-      "integrity": "sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A=="
+      "version": "4.17.19",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.19.tgz",
+      "integrity": "sha512-JNvd8XER9GQX0v2qJgsaN/mzFCNA5BRe/j8JN9d+tWyGLSodKQHKFicdwNYzWwI3wjRnaKPsGj1XkBjx/F96DQ=="
     },
     "minimist": {
       "version": "1.2.5",
Index: templates/examples/extensions/ui_imports/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/examples/extensions/ui_imports/package.json	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/examples/extensions/ui_imports/package.json	(date 1595360806731)
@@ -12,6 +12,6 @@
     "bluebird": "^3.5.1",
     "cfn-response": "^1.0.1",
     "handlebars": "^4.7.6",
-    "lodash": "^4.17.4"
+    "lodash": "^4.17.19"
   }
 }
Index: lambda/cfn/lib/ElasticSearchUpdate.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda/cfn/lib/ElasticSearchUpdate.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ lambda/cfn/lib/ElasticSearchUpdate.js	(date 1595957416762)
@@ -66,13 +66,13 @@
       console.error('Error when pinging for Processing Complete: %j', err);
       return reply(err.message);
     }
-    if (domain.DomainStatus.Processing || !domain.DomainStatus.Endpoint) {
+    if (domain.DomainStatus.Processing || (!domain.DomainStatus.Endpoint && !domain.DomainStatus.Endpoints.vpc) ) {
       console.log('Status is not Processing: false yet. Ping not done: %j', domain);
       return notDone();
     }
     console.log('Status is Processing: false! %j', domain);
     reply(null, domain.DomainStatus.DomainId, {
-      Endpoint: domain.DomainStatus.Endpoint
+      Endpoint: domain.DomainStatus.Endpoint ? domain.DomainStatus.Endpoint : domain.DomainStatus.Endpoints.vpc
     });
   });
 }
@@ -95,7 +95,7 @@
     }
     console.log('NoUpdate pingcheck success! %j', domain);
     reply(null, domain.DomainStatus.DomainId, {
-      Endpoint: domain.DomainStatus.Endpoint
+      Endpoint: domain.DomainStatus.Endpoint ? domain.DomainStatus.Endpoint : domain.DomainStatus.Endpoints.vpc
     });
   });
 }
Index: templates/testall/resources.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/testall/resources.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/testall/resources.js	(date 1595972497737)
@@ -38,6 +38,12 @@
         "Role": {"Fn::GetAtt": ["TestAllRole","Arn"]},
         "Runtime": "nodejs10.x",
         "Timeout": 900,
+        "VpcConfig" : {
+          "Fn::If": [ "VPCEnabled", {
+              "SubnetIds": { "Fn::Split" : [ ",", {"Ref": "VPCSubnetIdList"} ] },
+              "SecurityGroupIds": { "Fn::Split" : [ ",", {"Ref": "VPCSecurityGroupIdList"} ] },
+          }, {"Ref" : "AWS::NoValue"} ]
+        },
         "Tags":[{
             Key:"Type",
             Value:"TestAll"
@@ -62,6 +68,7 @@
         "Path": "/",
         "ManagedPolicyArns": [
           "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
+          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
         ],
         "Policies": [
           {
Index: templates/import/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/import/index.js	(revision d63e20c3f91acb32c38009cebb9be19b83f04524)
+++ templates/import/index.js	(date 1595989861097)
@@ -24,5 +24,12 @@
         "MetricsIndex": {"Type":"String"},
         "FeedbackIndex": {"Type":"String"},
         "Encryption": {"Type":"String"},
+        "VPCSubnetIdList" : {"Type": "String"},
+        "VPCSecurityGroupIdList": {"Type": "String"}
+    },
+    "Conditions": {
+        "VPCEnabled": { "Fn::Not": [
+                { "Fn::Equals": [ "", { "Ref": "VPCSecurityGroupIdList" } ] }
+            ] }
     }
 }
\ No newline at end of file
